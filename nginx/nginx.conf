user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Return 403 for sensitive locations
    map $request_uri $is_forbidden_path {
        default 0;
        ~*/\.git/.*$ 1;
        ~*/\.env$ 1;
        ~*/\.config$ 1;
        ~*/\.htaccess$ 1;
        ~*/wp-admin/.*$ 1;
        ~*/admin/.*$ 1;
        ~*/administrator/.*$ 1;
        ~*/wp-login\.php$ 1;
        ~*/phpmyadmin/.*$ 1;
        ~*/mysql/.*$ 1;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    map $remote_addr $proxy_forwarded_elem {
        ~^[0-9.]+$        "for=$remote_addr";
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";
        default           "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {
        "~^(,[ \t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\t \x21\x23-\x5B\x5D-\x7E\x80-\xFF]|\\[\t \x21-\x7E\x80-\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\t \x21\x23-\x5B\x5D-\x7E\x80-\xFF]|\\[\t \x21-\x7E\x80-\xFF])*\"))?)*([ \t]*,([ \t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\t \x21\x23-\x5B\x5D-\x7E\x80-\xFF]|\\[\t \x21-\x7E\x80-\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\t \x21\x23-\x5B\x5D-\x7E\x80-\xFF]|\\[\t \x21-\x7E\x80-\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";
        default "$proxy_forwarded_elem";
    }

    # Vless-TCP-TLS Fallback handling.
    server {
        listen 0.0.0.0:8001 proxy_protocol;
        http2 on;
        
        set_real_ip_from 127.0.0.1;
        real_ip_header proxy_protocol;

        # Block sensitive paths
        if ($is_forbidden_path = 1) {
            return 403;
        }

        # Forwards all incoming requests from xray to an external website.
        location / {
            sub_filter $proxy_host $host;
            sub_filter_once off;
            set $website ${NGINX_FAKE_WEBSITE};
            proxy_pass https://$website;
            resolver 1.1.1.2;

            proxy_set_header Host $proxy_host;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_ssl_server_name on;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Forwarded $proxy_add_forwarded;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # Vless-HU-TLS Handling. (Both direct and CDN)
    server {
        listen 2053 ssl;
        listen [::]:2053 ssl;
        http2 on;
        
        ssl_certificate /root/.acme.sh/${DIRECT_SUBDOMAIN}_ecc/fullchain.cer;
        ssl_certificate_key /root/.acme.sh/${DIRECT_SUBDOMAIN}_ecc/${DIRECT_SUBDOMAIN}.key;
        ssl_protocols TLSv1.3;

        # Block sensitive paths
        if ($is_forbidden_path = 1) {
            return 403;
        }

        # Forwards this path requests to xray.
        location = /${NGINX_PATH} {
            if ($http_upgrade != "websocket") {
                return 404;
            }
            proxy_pass http://xray:8002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

        # Fallback all other requests to an external website.
        location / {
            sub_filter $proxy_host $host;
            sub_filter_once off;
            set $website ${NGINX_FAKE_WEBSITE};
            proxy_pass https://$website;
            resolver 1.1.1.2;

            proxy_set_header Host $proxy_host;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_ssl_server_name on;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Forwarded $proxy_add_forwarded;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # Vless-XHTTP-QUIC Handling.
    server {
        # Vless-xhttp-quic-direct; Client will connect directly with alpn=h3.
        listen 8443 quic reuseport;
        listen [::]:8443 quic reuseport;
        # Vless-xhttp-quic-CDN; Client will connect to CF with alpn=h3 and CF will connect to VM with h2.
        listen 8443 ssl reuseport;
        listen [::]:8443 ssl reuseport;
        http2 on;
        
        ssl_certificate /root/.acme.sh/${DIRECT_SUBDOMAIN}_ecc/fullchain.cer;
        ssl_certificate_key /root/.acme.sh/${DIRECT_SUBDOMAIN}_ecc/${DIRECT_SUBDOMAIN}.key;
        ssl_protocols TLSv1.3;
        ssl_early_data on;
        
        add_header Alt-Svc 'h3=":8443"; ma=86400' always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header QUIC-Status $http3;
        
        # Block sensitive paths
        if ($is_forbidden_path = 1) {
            return 403;
        }

        # Forwards this path requests to xray.
        location /${NGINX_PATH} {
            grpc_pass grpc://xray:8003;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_read_timeout 315;
            grpc_send_timeout 5m;
            client_body_timeout 5m;
            client_max_body_size 0;
        }
        
        # Fallback all other requests to an external website.
        location / {
            sub_filter $proxy_host $host;
            sub_filter_once off;
            set $website ${NGINX_FAKE_WEBSITE};
            proxy_pass https://$website;
            resolver 1.1.1.2;

            proxy_set_header Host $proxy_host;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_ssl_server_name on;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Forwarded $proxy_add_forwarded;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}
